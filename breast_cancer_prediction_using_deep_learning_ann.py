# -*- coding: utf-8 -*-
"""Breast Cancer prediction using Deep Learning ANN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tFQez8kPJC0QktOQIfyWyVqUAIgf3w6u
"""

import pandas as pd
df=pd.read_csv("/content/drive/MyDrive/datasets/breast-cancer.csv")
df

df.drop(columns=["id"],inplace=True)

df

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
df["diagnosis"]=le.fit_transform(df["diagnosis"])
df

X=df.iloc[:,1:-1]
y=df.iloc[:,0]

X

y

df.isna().sum()

from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
scaler.fit(X)
X_scaled=scaler.fit_transform(X)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X_scaled,y,test_size=0.3,random_state=1)

y_train

from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
ann=Sequential()
ann.add(Dense(units=20,activation="relu"))
ann.add(Dense(units=25,activation="relu"))
ann.add(Dense(units=5,activation="relu"))
ann.add(Dense(units=1,activation="sigmoid"))
ann.compile(optimizer="adam",loss="binary_crossentropy",metrics=["accuracy"])
ann.fit(X_train,y_train,batch_size=10,epochs=200)

ann.summary()

loss,accuracy=ann.evaluate(X_test,y_test)
print("loss",loss)
print("accuracy",accuracy*100)